# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CkssVrU7f5_ftISiFzXAFfIk4r8dZSHh
"""

import streamlit as st
import pandas as pd
import pickle

# Load trained model
with open('/content/random_forest_ckd_model.pkl', 'rb') as file:
    model = pickle.load(file)

# Streamlit title
st.title('Chronic Kidney Disease Predictor')

# Input fields
sg = st.selectbox('Specific Gravity (sg)', [1.005, 1.010, 1.015, 1.020, 1.025])
al = st.slider('Albumin (al)', 0, 5)
rbc = st.selectbox('Red Blood Cells (rbc)', ['normal', 'abnormal'])
bgr = st.number_input('Blood Glucose Random (bgr)', 50, 500, 100)
sc = st.number_input('Serum Creatinine (sc)', 0.1, 15.0, 1.0)
hemo = st.number_input('Hemoglobin (hemo)', 3.0, 17.0, 13.0)
pcv = st.number_input('Packed Cell Volume (pcv)', 20, 60, 40)
rbcc = st.number_input('Red Blood Cell Count (rbcc)', 2.0, 7.0, 4.5)
htn = st.selectbox('Hypertension (htn)', ['no', 'yes'])
dm = st.selectbox('Diabetes Mellitus (dm)', ['no', 'yes'])

# Encode inputs
input_data = pd.DataFrame({
    'sg': [sg],
    'al': [al],
    'rbc': [1 if rbc == 'normal' else 0],
    'bgr': [bgr],
    'sc': [sc],
    'hemo': [hemo],
    'pcv': [pcv],
    'rbcc': [rbcc],
    'htn': [1 if htn == 'yes' else 0],
    'dm': [1 if dm == 'yes' else 0]
})

# Prediction button
if st.button('Predict CKD'):
    prediction = model.predict(input_data)
    probability = model.predict_proba(input_data)[0][1]

    if prediction[0] == 1:
        st.error(f'Patient likely has CKD with probability {probability:.2%}')
    else:
        st.success(f'Patient likely does NOT have CKD with probability {(1-probability):.2%}')